name: Build

on: [push]

jobs:
  build:
    name: Build project
    runs-on: ubuntu-20.04

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: io_rpg
        ports:
        - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build with Gradle
        run: ./gradlew build -x verifyGoogleJavaFormat -x test
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: binary
          path: build/libs
      - name: Run tests and generate reports
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/io_rpg
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: postgres
          SPRING_PROFILES_ACTIVE: prod
        run: ./gradlew test jacocoTestReport
      - name: Upload code coverage report
        uses: actions/upload-artifact@v1
        with:
          name: coverage_report
          path: build/reports/jacoco/test/html
      - name: Upload test report
        uses: actions/upload-artifact@v1
        with:
          name: test_report
          path: build/reports/tests/test
      - name: Upload PMD main report
        uses: actions/upload-artifact@v1
        with:
          name: pmd_report
          path: build/reports/pmd/main.html
      - name: Upload PMD test report
        uses: actions/upload-artifact@v1
        with:
          name: pmd_report
          path: build/reports/pmd/test.html
      - name: Upload SpotBugs main report
        uses: actions/upload-artifact@v1
        with:
          name: spotbugs_report
          path: build/reports/spotbugs/main.xml
      - name: Upload SpotBugs test report
        uses: actions/upload-artifact@v1
        with:
          name: spotbugs_report
          path: build/reports/spotbugs/test.xml
      - name: Generate JavaDoc
        run: ./gradlew javadoc
      - name: Upload JavaDoc
        uses: actions/upload-artifact@v1
        with:
          name: javadoc
          path: build/docs/javadoc

  formatting:
    name: Verify formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: "11"
      - name: Verify formatting
        run: ./gradlew verifyGoogleJavaFormat

  deploy:
    name: Deploy on Heroku
    needs: build
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Download binary
        uses: actions/download-artifact@v2
        with:
          name: binary
          path: build/libs
      - run: ls -R
      - name: Deploy
        uses: akhileshns/heroku-deploy@v3.0.4
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "io-rpg-dev"
          heroku_email: "hjaremko@outlook.com"
          usedocker: true
          docker_heroku_process_type: "web"
